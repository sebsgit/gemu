#include "cuda/cuda.h"

static const struct {
    CUresult err;
    const char * msg;
} cu_err_[] =
{
    {CUDA_SUCCESS, ""},
    {CUDA_ERROR_INVALID_VALUE, "invalid value"}
};

CUresult cuGetErrorString(CUresult code, const char** ptr) {
    for (size_t i=0 ; i<sizeof(cu_err_)/sizeof(cu_err_[0]) ; ++i){
        if (code == cu_err_[i].err){
            *ptr = cu_err_[i].msg;
            return CUDA_SUCCESS;
        }
    }
    *ptr = 0;
    return CUDA_ERROR_INVALID_VALUE;
}

#define MAKE_CASE(x) case x : *ptr = #x ; break;

CUresult cuGetErrorName(CUresult code, const char** ptr) {
    switch (code) {
    MAKE_CASE(CUDA_SUCCESS)
    MAKE_CASE(CUDA_ERROR_INVALID_VALUE)
    MAKE_CASE(CUDA_ERROR_OUT_OF_MEMORY)
    MAKE_CASE(CUDA_ERROR_NOT_INITIALIZED)
    MAKE_CASE(CUDA_ERROR_DEINITIALIZED)
    MAKE_CASE(CUDA_ERROR_PROFILER_DISABLED)
    MAKE_CASE(CUDA_ERROR_PROFILER_NOT_INITIALIZED)
    MAKE_CASE(CUDA_ERROR_PROFILER_ALREADY_STARTED)
    MAKE_CASE(CUDA_ERROR_PROFILER_ALREADY_STOPPED)
    MAKE_CASE(CUDA_ERROR_NO_DEVICE)
    MAKE_CASE(CUDA_ERROR_INVALID_DEVICE)
    MAKE_CASE(CUDA_ERROR_INVALID_IMAGE)
    MAKE_CASE(CUDA_ERROR_INVALID_CONTEXT)
    MAKE_CASE(CUDA_ERROR_CONTEXT_ALREADY_CURRENT)
    MAKE_CASE(CUDA_ERROR_MAP_FAILED)
    MAKE_CASE(CUDA_ERROR_UNMAP_FAILED)
    MAKE_CASE(CUDA_ERROR_ARRAY_IS_MAPPED)
    MAKE_CASE(CUDA_ERROR_ALREADY_MAPPED)
    MAKE_CASE(CUDA_ERROR_NO_BINARY_FOR_GPU)
    MAKE_CASE(CUDA_ERROR_ALREADY_ACQUIRED)
    MAKE_CASE(CUDA_ERROR_NOT_MAPPED)
    MAKE_CASE(CUDA_ERROR_NOT_MAPPED_AS_ARRAY)
    MAKE_CASE(CUDA_ERROR_NOT_MAPPED_AS_POINTER)
    MAKE_CASE(CUDA_ERROR_ECC_UNCORRECTABLE)
    MAKE_CASE(CUDA_ERROR_UNSUPPORTED_LIMIT)
    MAKE_CASE(CUDA_ERROR_CONTEXT_ALREADY_IN_USE)
    MAKE_CASE(CUDA_ERROR_PEER_ACCESS_UNSUPPORTED)
    MAKE_CASE(CUDA_ERROR_INVALID_SOURCE)
    MAKE_CASE(CUDA_ERROR_FILE_NOT_FOUND)
    MAKE_CASE(CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND)
    MAKE_CASE(CUDA_ERROR_SHARED_OBJECT_INIT_FAILED)
    MAKE_CASE(CUDA_ERROR_OPERATING_SYSTEM)
    MAKE_CASE(CUDA_ERROR_INVALID_HANDLE)
    MAKE_CASE(CUDA_ERROR_NOT_FOUND)
    MAKE_CASE(CUDA_ERROR_NOT_READY)
    MAKE_CASE(CUDA_ERROR_ILLEGAL_ADDRESS)
    MAKE_CASE(CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES)
    MAKE_CASE(CUDA_ERROR_LAUNCH_TIMEOUT)
    MAKE_CASE(CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING)
    MAKE_CASE(CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED)
    MAKE_CASE(CUDA_ERROR_PEER_ACCESS_NOT_ENABLED)
    MAKE_CASE(CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE)
    MAKE_CASE(CUDA_ERROR_CONTEXT_IS_DESTROYED)
    MAKE_CASE(CUDA_ERROR_ASSERT)
    MAKE_CASE(CUDA_ERROR_TOO_MANY_PEERS)
    MAKE_CASE(CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED)
    MAKE_CASE(CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED)
    MAKE_CASE(CUDA_ERROR_NOT_PERMITTED)
    MAKE_CASE(CUDA_ERROR_NOT_SUPPORTED)
    MAKE_CASE(CUDA_ERROR_UNKNOWN)
    default:
        *ptr = 0;
        return CUDA_ERROR_INVALID_VALUE;
    }
    return CUDA_SUCCESS;
}
